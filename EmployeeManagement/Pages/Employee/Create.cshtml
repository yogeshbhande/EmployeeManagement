@page
@model EmployeeManagement.Pages.Employee.CreateModel
@{
    ViewData["Title"] = "Add Employee";
}

<h1>Add Employee</h1>
<hr/>

<div class="row">
    <div class="col-6">
        <form method="post" enctype="multipart/form-data">
            <div asp-asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Employees.FirstName" class="control-lab"></label>
                <input asp-for="Employees.FirstName" class="form-control"/>
                <span asp-validation-for="Employees.FirstName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Employees.LastName" class="control-lab"></label>
                <input asp-for="Employees.LastName" class="form-control" />
                <span asp-validation-for="Employees.LastName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Employees.Age" class="control-lab"></label>
                <input asp-for="Employees.Age" class="form-control" />  
                <span asp-validation-for="Employees.Age" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="File">Upload PDF File</label>
                <input type="file" class="form-control" id="File" name="File" accept=".pdf" />
                @if (ModelState.ContainsKey("File"))
                {
                    <div class="text-danger">@ModelState["File"]?.Errors?.FirstOrDefault()?.ErrorMessage</div>
                }
            </div>


            <div class="form-group mt-2">
                <a asp-page="Index" class="btn btn-danger">Back</a>
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

